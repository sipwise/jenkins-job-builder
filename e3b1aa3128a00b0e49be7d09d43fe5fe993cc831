{
  "comments": [
    {
      "key": {
        "uuid": "da85f559_4276fb70",
        "filename": "jenkins_jobs/parser.py",
        "patchSetId": 17
      },
      "lineNbr": 154,
      "author": {
        "id": 6039
      },
      "writtenOn": "2015-11-12T00:39:02Z",
      "side": 1,
      "message": "I don\u0027t see any reason why we can\u0027t pass {} in to deepUpdate, but if there is one then we should make deepUpdate correctly handle the case where newdata \u003d\u003d {} instead of having this extra logic.",
      "revId": "e3b1aa3128a00b0e49be7d09d43fe5fe993cc831",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da85f559_6271bf75",
        "filename": "jenkins_jobs/parser.py",
        "patchSetId": 17
      },
      "lineNbr": 162,
      "author": {
        "id": 6039
      },
      "writtenOn": "2015-11-12T00:39:02Z",
      "side": 1,
      "message": "The variable naming here is confusing. The \u0027data\u0027 above maps to \u0027updated_data\u0027 here, and the \u0027newdata\u0027 above maps to \u0027data\u0027 here. This makes it hard to follow the logic because we go from data being the variable with partial new information to data being the variable with the final values. If you don\u0027t want to reuse the names data and newdata, then it might be easier to follow the logic if neither of these parameters are called date (nor newdata).",
      "revId": "e3b1aa3128a00b0e49be7d09d43fe5fe993cc831",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}