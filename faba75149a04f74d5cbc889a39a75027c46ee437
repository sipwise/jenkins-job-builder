{
  "comments": [
    {
      "key": {
        "uuid": "7a016987_04c8f272",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 13487
      },
      "writtenOn": "2015-05-21T16:38:18Z",
      "side": 1,
      "message": "I actually find this commit message somewhat confusing. Would you mind clarifying your terminology with an annotated complete example similar to:\n\n  - project:\n    name: \u0027p\u0027\n    key: \u0027value-p\u0027          # \u003c- project parameter\n    jobs:\n      - \u0027jg\u0027:\n        key: \u0027value-p-i1\u0027   # \u003c- project instance parameter\n      - \u0027jt\u0027:\n        key: \u0027value-p-i2\u0027   # \u003c- project instance parameter\n      - \u0027j\u0027\n\n  - job-group:\n    name: \u0027jg\u0027\n    key: \u0027value-jg\u0027         # \u003c- job-group parameter\n    jobs:\n      - \u0027jt\u0027:\n        key: \u0027value-jg-i\u0027   # \u003c- job-group instance parameter\n\n  - job-template:\n    name: \u0027jt\u0027\n    key: \u0027value-jt\u0027         # \u003c- job-template parameter\n\n  - job:\n    name: \u0027j\u0027\n\n  - defaults:\n    name: \u0027d\u0027\n    key: \u0027value-d\u0027          # \u003c- defaults parameter\n\nThen show that the current override order from least to greatest precedence is:\n\n  defaults parameter -\u003e job-template parameter -\u003e project parameter -\u003e project instance parameter -\u003e job-group parameter -\u003e job-group instance parameter\n\nAnd that what this patch does is change the order to:\n\n  defaults parameter -\u003e job-template parameter -\u003e project parameter -\u003e job-group parameter -\u003e job-group instance parameter -\u003e project instance parameter\n\nWhen we talked about this in IRC several weeks ago this is the order I was trying to describe:\n\n  defaults parameter -\u003e job-template parameter -\u003e job-group parameter -\u003e job-group instance parameter -\u003e project parameter -\u003e project instance parameter\n\nI indicated how to change this with a comment on the builder.py patch.",
      "revId": "faba75149a04f74d5cbc889a39a75027c46ee437",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a016987_071d9465",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 13487
      },
      "writtenOn": "2015-05-21T16:39:45Z",
      "side": 1,
      "message": "Sorry, I meant \"on the parser.py patch\"",
      "parentUuid": "7a016987_04c8f272",
      "revId": "faba75149a04f74d5cbc889a39a75027c46ee437",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5afe65bd_733b5539",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1054
      },
      "writtenOn": "2015-06-03T14:14:48Z",
      "side": 1,
      "message": "The poor terminology is definitely a problem I\u0027ll look to correct this.\n\nI don\u0027t believe the idea of a job-template parameter exists in JJB, if you define a key at that level it never gets picked up within the template or any macros it references. Unless that is something you\u0027d like to see added?\n\nSo perhaps current behaviour is better described as (dropped parameter for sake of brevity):\n\n defaults -\u003e project -\u003e project instance -\u003e job-group -\u003e job-group instance\n\n\nI think that:\n\n defaults -\u003e project -\u003e job-group -\u003e job-group instance  -\u003e project instance\n\nmight be more consistent and useful than:\n\n defaults -\u003e job-group -\u003e job-group instance -\u003e project -\u003e project instance\n\nCourse both are better than the current situation :)\n\n\nThe difference being at the level at which the knowledge about what is the best value to use varies and whether you consider the project params and job-group params more global defaults with the instance ones being specific overrides. Projects can include multiple job groups, where the job-group and it\u0027s job may know more about what values should be used than the project, and with the second one i think there is a greater chance of ending up having to override the same param at both the project and project instance level to get the desired behaviour.\n\n\nThink the hierarchy can be shown as:\n\n - project\n     - project instance\n\n - project\n     - job-group\n         - job-group instance\n             - project instance\n\nTo be consistent I think we need to either have parent always override child or child override parent levels. One or the other. The problem at the moment is with the second item above, the job-group params are overridden by job-group instance params and the result overrides both the project instance and project level params.\n\n\nI\u0027m assuming here of course based on some experiments additionally with nested job-groups that it seems better to treat project params as a project level defaults so you can have something like the following:\n\n defaults -\u003e\n   project (consider default) params -\u003e\n     job-group level 1 (consider default) params -\u003e\n       job-group level 2 (consider default) params -\u003e\n         job level 2 instance params -\u003e\n           job level 1 instance params -\u003e\n             project instance params\n\nEssentially the RHS always overrides LHS, no matter how deep you job in levels around grouping data.\n\n\nI\u0027m not sure with the alternative precedence you proposed what would be the correct order that would make sense and be consistent when considering the possibility of nested job-groups.",
      "parentUuid": "7a016987_04c8f272",
      "revId": "faba75149a04f74d5cbc889a39a75027c46ee437",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a016987_4145bc43",
        "filename": "jenkins_jobs/parser.py",
        "patchSetId": 2
      },
      "lineNbr": 221,
      "author": {
        "id": 13487
      },
      "writtenOn": "2015-05-21T16:38:18Z",
      "side": 1,
      "message": "I would take this on step further and also move the \"project\":\n\n  d \u003d {}\n  d.update(group)\n  d.update(group_jobparams)\n  d.update(project)\n  d.update(jobparams)\n\nAnd probably remove the comment about \"allow a group to override parameters set by a project\".",
      "revId": "faba75149a04f74d5cbc889a39a75027c46ee437",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}