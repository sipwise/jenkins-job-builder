{
  "comments": [
    {
      "key": {
        "uuid": "AAAAPn//s9Y\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 1,
      "author": {
        "id": 4146
      },
      "writtenOn": "2013-06-24T22:27:49Z",
      "side": 1,
      "message": "You can add a line for your copyright as well as this is a derivative work of the original.",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//s3E\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 1,
      "author": {
        "id": 7580
      },
      "writtenOn": "2013-06-24T23:07:28Z",
      "side": 1,
      "message": "Apache license is fine with me :-)",
      "parentUuid": "AAAAPn//s9Y\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//sys\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 1,
      "author": {
        "id": 4146
      },
      "writtenOn": "2013-06-24T23:24:26Z",
      "side": 1,
      "message": "Yes, the license shouldn\u0027t change, but you can add a copyright line for yourself.",
      "parentUuid": "AAAAPn//s3E\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//s9o\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 4146
      },
      "writtenOn": "2013-06-24T22:27:49Z",
      "side": 1,
      "message": "I would prefer that lines 71-74 become:\n  value \u003d data.get(\u0027value\u0027, \u0027\u0027)\n\nThen you would omit the value key from the yaml to have an empty value.",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//s4E\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 7580
      },
      "writtenOn": "2013-06-24T23:07:28Z",
      "side": 1,
      "message": "I have already tried that approach and it does not seem to work: I am getting then\n\n\u003cvalue\u003eNone\u003c/value\u003e\n\nIn the final XML document instead of \n\n\u003cvalue/\u003e\n\nwhenever a value is not supplied in the YAML.",
      "parentUuid": "AAAAPn//s9o\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//syk\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 4146
      },
      "writtenOn": "2013-06-24T23:24:26Z",
      "side": 1,
      "message": "The trick I have used in the get method is that \u0027\u0027 becomes the default value if there are no values in the yaml. This is what your if else is essentially doing except it is keying off of a value of \u0027None\u0027. The code I have written should work. Note that if you omit the default value argument to get() it will return None which will get converted to the string \"None\".",
      "parentUuid": "AAAAPn//s4E\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//skY\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 7580
      },
      "writtenOn": "2013-06-25T01:35:01Z",
      "side": 1,
      "message": "I tried your code as it stands there (here\u0027s the diff):\n\n-    if data[\u0027value\u0027] \u003d\u003d \u0027None\u0027:\n-        value \u003d \u0027\u0027\n-    else:\n-        value \u003d data[\u0027value\u0027]\n+    value \u003d data.get(\u0027value\u0027, \u0027\u0027)\n\nbut I still get the \u0027None\u0027 values in the XML. \n\nThe problem happens whenever there is a variable specified in the \u0027value\u0027 attribute of the job-template, and the value of that variable is blank in the project template. Here\u0027s an example:\n\n- job-template:\n    name: \u0027{name}-{build}\u0027\n...\n    metadata:\n      - string:\n          name: stageaware\n          value: \u0027{stageaware}\u0027\n          expose-to-env: true\n\n- project:\n    name: projectname\n    build:\n     - buildname\n    jobs:\n     - \u0027{name}-{build}\u0027:\n        stageaware:\n...\n\nI guess what happens is that when the project template gets parsed, the variable \u0027stageaware\u0027 from the above example is assigned a \u0027None\u0027 value which is then passed on to job-template so it is not blank any more.",
      "parentUuid": "AAAAPn//syk\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//p/Q\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1
      },
      "writtenOn": "2013-06-25T20:52:04Z",
      "side": 1,
      "message": "I agree with Clark\u0027s conclusion, and I think his code is what should be there.  I\u0027d like to point out a subtlety which may be lost: the original code says:\n\n  if data[\u0027value\u0027] \u003d\u003d \u0027None\u0027:\n\nNote that \u0027None\u0027 is in quotes.  Because of your recent clarification, I think I understand where that is coming from.  In your example, stageaware is being set to the None object as a job argument in the project section.  It appears that somewhere that is being translated to the string \u0027None\u0027.  That is either a bug in or mis-use of the JJB template syntax.  I think we should look into why that is happening separately.  I have not looked into it deeply, but I will note that \"null\" (WITHOUT quotes) is the yaml equivalent of the None object, so perhaps \"stageaware: null\" would do what you want.\n\nWe have never \"unset\" a variable in JJB, our use has always been limited to setting it to non-null values.\n\nRegardless, I think Clark\u0027s original suggestion is the right code.",
      "parentUuid": "AAAAPn//skY\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//oyQ\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 7580
      },
      "writtenOn": "2013-06-26T07:59:23Z",
      "side": 1,
      "message": "Yes, both you and Clark are right!\nI feel almost like I had a brain eclipse: I am now wondering why did I not set the \u0027stageaware\u0027 variable in the project template in this case - setting it to \u0027false\u0027 instead of blank value solves all the problems and the code works as expected, without all those nasty comparisons to \u0027None\u0027 literals.\nI will submit the changeset in a short while.",
      "parentUuid": "AAAAPn//p/Q\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//s9k\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 4146
      },
      "writtenOn": "2013-06-24T22:27:49Z",
      "side": 1,
      "message": "See above comment.",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//s34\u003d",
        "filename": "jenkins_jobs/modules/metadata.py",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 7580
      },
      "writtenOn": "2013-06-24T23:07:28Z",
      "side": 1,
      "message": "See my reply on the lines 71-74: does not work as expected, unfortunately.",
      "parentUuid": "AAAAPn//s9k\u003d",
      "revId": "933b2619ddf2a99316def15e24ee82a99f7e9367",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}