{
  "comments": [
    {
      "key": {
        "uuid": "3afb71cf_e4efa1ae",
        "filename": "jenkins_jobs/local_yaml.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1054
      },
      "writtenOn": "2015-06-06T12:23:34Z",
      "side": 1,
      "message": "Used set in the original implementation cause we had a large number of includes which resulted in a large number of paths being added to search through.\n\nMight be worth checking this out to see what happens when maybe a 100+ includes are in place, imagine it\u0027s unlikely to result in a performance issue as the first path the file is found under will be used, but if it is we can always look to switching using an ordered set our the keys of an ordered dict to solve.",
      "revId": "4b5d0b405aae53a775b01a7de0ead344c6d02416",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afb71cf_c21c8315",
        "filename": "jenkins_jobs/local_yaml.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 9614
      },
      "writtenOn": "2015-06-17T03:43:20Z",
      "side": 1,
      "message": "I actually did see some funky behavior during the test suite where the same path is added multiple times...but with set() it simply gets ignored where I believe at least if something set by the user it should be added to the front of search_path.\n\nThats why I changed it to list()\n\nTo get more than 100 includes sounds very unlikely does it not ?",
      "parentUuid": "3afb71cf_e4efa1ae",
      "revId": "4b5d0b405aae53a775b01a7de0ead344c6d02416",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa32b979_40632642",
        "filename": "jenkins_jobs/local_yaml.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1054
      },
      "writtenOn": "2015-06-18T17:33:39Z",
      "side": 1,
      "message": "Indeed it does, which is why I\u0027m happy enough to use this as is and we can switch to an ordered set in the future if it proves to be a problem.",
      "parentUuid": "3afb71cf_c21c8315",
      "revId": "4b5d0b405aae53a775b01a7de0ead344c6d02416",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}