{
  "comments": [
    {
      "key": {
        "uuid": "9ad9bd40_049d5459",
        "filename": "jenkins_jobs/builder.py",
        "patchSetId": 5
      },
      "lineNbr": 541,
      "author": {
        "id": 8212
      },
      "writtenOn": "2014-05-05T19:18:02Z",
      "side": 1,
      "message": "Is there any reason not to use:\n\n try:\n     fn \u003d iter(fn)\n except TypeException:\n     fn \u003d iter([fn])\n\nLooks to me more pythonic",
      "revId": "b9a31fdbca6b42ad1afc84f3a2c36bdbbab4a09d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_008b6d1f",
        "filename": "jenkins_jobs/builder.py",
        "patchSetId": 5
      },
      "lineNbr": 541,
      "author": {
        "id": 1054
      },
      "writtenOn": "2014-05-06T11:34:33Z",
      "side": 1,
      "message": "Need to be able to distinguish between a list and a string here. \u0027iter(\"string\")\u0027 is valid and will iterate over each letter in the string, which isn\u0027t correct as we wouldn\u0027t want that behaviour for single filenames.\n\nOptions:\n- support fn being a single string, a list or an object with a read method\n- support fn being a list or an object with a read method\n- require that fn is a list and check whether each item has a read method or not and parse accordingly\n\nI started with option 1, but I\u0027m open to rethinking what should and shouldn\u0027t be supported here in the name of sensible code :)",
      "parentUuid": "9ad9bd40_049d5459",
      "revId": "b9a31fdbca6b42ad1afc84f3a2c36bdbbab4a09d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ae5cdf2_92a485ba",
        "filename": "jenkins_jobs/builder.py",
        "patchSetId": 5
      },
      "lineNbr": 541,
      "author": {
        "id": 6987
      },
      "writtenOn": "2014-06-10T00:37:00Z",
      "side": 1,
      "message": "all seems sensible to me.",
      "parentUuid": "9ad9bd40_008b6d1f",
      "revId": "b9a31fdbca6b42ad1afc84f3a2c36bdbbab4a09d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ae5cdf2_52467d50",
        "filename": "jenkins_jobs/cmd.py",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 6987
      },
      "writtenOn": "2014-06-10T00:37:00Z",
      "side": 1,
      "message": "sp recusrsively/recursively\n\nAlso should \u0027dest\u0027 and \u0027default\u0027 be set to something for this param?",
      "revId": "b9a31fdbca6b42ad1afc84f3a2c36bdbbab4a09d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ae5cdf2_d2f60df9",
        "filename": "jenkins_jobs/cmd.py",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 6987
      },
      "writtenOn": "2014-06-10T00:37:00Z",
      "side": 1,
      "message": "shouldn\u0027t recursive option get passed to builder here?",
      "revId": "b9a31fdbca6b42ad1afc84f3a2c36bdbbab4a09d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}