{
  "comments": [
    {
      "key": {
        "uuid": "dae33548_c1ec2295",
        "filename": "jenkins_jobs/modules/scm.py",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1054
      },
      "writtenOn": "2016-02-18T23:43:35Z",
      "side": 1,
      "message": "Had a question about whether we should check the plugin version on another review, same thing applies here.\n\nThanh, think we should just allow new parameters that require specific versions as long as the functionality is available for a certain length of time, or check the version of the plugin and warn the user for a few releases of JJB?",
      "revId": "66b7f4d907bc627558008e7f030bf000787f8288",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bae84128_3d6a1d81",
        "filename": "jenkins_jobs/modules/scm.py",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 13807
      },
      "writtenOn": "2016-02-20T05:12:46Z",
      "side": 1,
      "message": "Copying my response from other review.\n\nIn other plugins I worked on I found that Jenkins does not configure options that are not valid and does not appear to have any adverse effects on the use of the plugin so I think risk is minimal here. So I would say yes, this is silently ignored by Jenkins.\n\nI agree though that from a user perspective if an option is not valid because they are using an older plugin we should probably warn the user that they should upgrade if they need that feature. How easy is it to detect the plugin version in JJB?\n\nIf it\u0027s significant work I\u0027d say we let this go through patch go through and we can come back and add that support in future patches.",
      "parentUuid": "dae33548_c1ec2295",
      "revId": "66b7f4d907bc627558008e7f030bf000787f8288",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}