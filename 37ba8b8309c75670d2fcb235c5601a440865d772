{
  "comments": [
    {
      "key": {
        "uuid": "9a68dd71_f9b8ccc9",
        "filename": "jenkins_jobs/builder.py",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 13487
      },
      "writtenOn": "2016-01-26T00:38:21Z",
      "side": 1,
      "message": "It seems like if we are expecting the possibility of multiple jobs with the same basename that there might be CacheStorage conflicts if we don\u0027t replace job.name here with job.fullname\n\nBut I\u0027m also confused about the need for \"job.name\" if we always expect the possibility for jobs to be located within folders.",
      "revId": "37ba8b8309c75670d2fcb235c5601a440865d772",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a68dd71_9993d05a",
        "filename": "jenkins_jobs/builder.py",
        "patchSetId": 5
      },
      "lineNbr": 370,
      "author": {
        "id": 13487
      },
      "writtenOn": "2016-01-26T00:38:21Z",
      "side": 1,
      "message": "Should this be\n  output_fn \u003d os.path.join(output, os.path.normpath(job.fullname))\n?",
      "revId": "37ba8b8309c75670d2fcb235c5601a440865d772",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a68dd71_991e700a",
        "filename": "jenkins_jobs/xml_config.py",
        "patchSetId": 5
      },
      "lineNbr": 46,
      "author": {
        "id": 13487
      },
      "writtenOn": "2016-01-26T00:33:19Z",
      "side": 1,
      "message": "This looks wrong to me.\n\nLooking around at all the other changes throughout the library, it looks like this patch replaces all uses of \"name\" with \"fullname\" so I\u0027m a little confused why we would keep \"name\" around...?\n\nIt also feels wrong to have two different required parameters for this constructor, both of which are actually the name of the job.",
      "revId": "37ba8b8309c75670d2fcb235c5601a440865d772",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a68dd71_d9a6280e",
        "filename": "tests/general/fixtures/folders001.yaml",
        "patchSetId": 5
      },
      "lineNbr": 3,
      "author": {
        "id": 13487
      },
      "writtenOn": "2016-01-26T00:33:19Z",
      "side": 1,
      "message": "It seems to me like it would be simpler to use an approach like:\n  name: folders/test-folder\n  project-type: freestyle\n\nWhere the folder is determined by the \"dirname\" of name value.\n\nThis would also avoid the need to pass a \"fullname\" to the XmlJob constructor. Instead, we could create \"dirname\" and \"basename\" properties on the XmlJob object.",
      "revId": "37ba8b8309c75670d2fcb235c5601a440865d772",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a68dd71_9952f065",
        "filename": "tests/general/fixtures/folders001.yaml",
        "patchSetId": 5
      },
      "lineNbr": 3,
      "author": {
        "id": 13487
      },
      "writtenOn": "2016-01-26T00:40:36Z",
      "side": 1,
      "message": "FYI, I\u0027m not saying that we would need \"dirname\" or \"basename\" properties on the XmlJob object--only if for some reason elsewhere in the code we actually care about either of those pieces of the job name.",
      "parentUuid": "9a68dd71_d9a6280e",
      "revId": "37ba8b8309c75670d2fcb235c5601a440865d772",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a68dd71_9924300d",
        "filename": "tests/yamlparser/fixtures/folders001.yaml",
        "patchSetId": 5
      },
      "lineNbr": 4,
      "author": {
        "id": 13487
      },
      "writtenOn": "2016-01-26T00:38:21Z",
      "side": 1,
      "message": "It\u0027s not clear to me how the resulting XML would be different without this line.\n\nI\u0027d like to advocate for testing at the boundaries of the JJB library by finding a way to check the arguments of calls to the python-jenkins library. For an example of what I mean by this, please see https://review.openstack.org/#/c/262950/2/tests/cmd/subcommands/test_update.py and https://review.openstack.org/#/c/262949/2/tests/cmd/subcommands/test_update.py",
      "revId": "37ba8b8309c75670d2fcb235c5601a440865d772",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}