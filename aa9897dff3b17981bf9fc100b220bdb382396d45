{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b0e3307f_4f34a238",
        "filename": "tests/multibranch/fixtures/scm_github_full.yaml",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 34567
      },
      "writtenOn": "2023-02-15T14:42:35Z",
      "side": 1,
      "message": "May be more tests should be added for completeness.\nLike these:\n```\n- trigger-build-on-pr-*: false\n```\n\n```\n- trigger-build-on-pr-*:\n    -allow-untrusted-users: false\n```\n\n```\n- trigger-build-on-pr-*:\n```\n\n```\n- trigger-build-on-pr-comment:\n    # Without comment.\n    -allow-untrusted-users: true\n```",
      "revId": "aa9897dff3b17981bf9fc100b220bdb382396d45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5496395_70ed33a6",
        "filename": "tests/multibranch/fixtures/scm_github_full.yaml",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 35706
      },
      "writtenOn": "2023-02-15T20:45:28Z",
      "side": 1,
      "message": "I\u0027ll add them. The last one is a good one - what should the behavior be here? Should we:\n- silently treat the option as completely disabled (I don\u0027t like it - silent errors are not fun when debugging),\n- raise an exception or\n- use an empty/default string as the comment? \n\nThe plugin itself allows to save an empty comment tag, but the next configuration attempt displays \"^REBUILD$\" as a comment (which is then saved into XML when the user saves the configuration unless they change it).",
      "parentUuid": "b0e3307f_4f34a238",
      "revId": "aa9897dff3b17981bf9fc100b220bdb382396d45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99894a33_0b5e7139",
        "filename": "tests/multibranch/fixtures/scm_github_full.yaml",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 34567
      },
      "writtenOn": "2023-02-16T07:33:58Z",
      "side": 1,
      "message": "It looks like exception is the best option here.",
      "parentUuid": "d5496395_70ed33a6",
      "revId": "aa9897dff3b17981bf9fc100b220bdb382396d45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4622bf43_9125420d",
        "filename": "tests/multibranch/fixtures/scm_github_full.yaml",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 34567
      },
      "writtenOn": "2023-02-16T07:35:04Z",
      "side": 1,
      "message": "Also note that exceptions could also be tested - see .error files as examples.",
      "parentUuid": "99894a33_0b5e7139",
      "revId": "aa9897dff3b17981bf9fc100b220bdb382396d45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b7b5453_5fe2fdc1",
        "filename": "tests/multibranch/fixtures/scm_github_full.yaml",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 35706
      },
      "writtenOn": "2023-02-16T21:09:59Z",
      "side": 1,
      "message": "Thanks for the pointer.\nI\u0027ve added more positive test cases, however it seems that the exception case will take some time. I\u0027ve added also `test_errors` (same mechanism as in `yamlparser`), but `check_generator` has some deep fixture magic that causes that XML generation happens on test setup instead of in the test body... This causes `pytest.raises` to miss the exception (well, it\u0027s not even executed).\n\nThis is my current `test_errors`:\n\n  def test_error(check_generator, expected_error):\n      with pytest.raises(Exception) as excinfo:\n          check_generator(project_multibranch.WorkflowMultiBranch)\n      assert str(excinfo.value) \u003d\u003d expected_error",
      "parentUuid": "4622bf43_9125420d",
      "revId": "aa9897dff3b17981bf9fc100b220bdb382396d45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5fdb7d6_00ecf94f",
        "filename": "tests/multibranch/fixtures/scm_github_full.yaml",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 34567
      },
      "writtenOn": "2023-02-17T07:49:30Z",
      "side": 1,
      "message": "I see. You need this diff:\n```\ndiff --git a/tests/conftest.py b/tests/conftest.py\nindex 974f68d5..e4b9a819 100644\n--- a/tests/conftest.py\n+++ b/tests/conftest.py\n@@ -129,12 +129,12 @@ def check_folder(scenario, jjb_config, input):\n def check_generator(scenario, input, expected_output, jjb_config, registry, project):\n     registry.set_parser_data({})\n \n-    if project:\n-        xml \u003d project.root_xml(input)\n-    else:\n-        xml \u003d XML.Element(\"project\")\n-\n     def check(Generator):\n+        if project:\n+            xml \u003d project.root_xml(input)\n+        else:\n+            xml \u003d XML.Element(\"project\")\n+\n         generator \u003d Generator(registry)\n         generator.gen_xml(xml, input)\n         check_folder(scenario, jjb_config, input)\n```",
      "parentUuid": "3b7b5453_5fe2fdc1",
      "revId": "aa9897dff3b17981bf9fc100b220bdb382396d45",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}